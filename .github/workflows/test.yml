name: Test Action

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-basic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create test Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM python:3.12-slim
          RUN pip install uv
          WORKDIR /app
          COPY . .
          CMD ["echo", "Hello from Python UV Docker!"]
          EOF
      
      - name: Test basic usage
        uses: ./
        with:
          image-name: test-python-uv-app
          image-tag: test
          push: false

  test-with-custom-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create test Dockerfile with args
        run: |
          cat > Dockerfile << 'EOF'
          ARG PYTHON_VERSION=3.12
          ARG UV_VERSION=latest
          FROM python:${PYTHON_VERSION}-slim
          RUN pip install uv
          WORKDIR /app
          COPY . .
          CMD ["echo", "Hello from Python ${PYTHON_VERSION} with UV ${UV_VERSION}!"]
          EOF
      
      - name: Test with custom versions
        uses: ./
        with:
          image-name: test-python-uv-app-custom
          image-tag: test-custom
          python-version: "3.11"
          uv-version: "0.4.0"
          push: false

  test-multi-platform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create test Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM python:3.12-slim
          RUN pip install uv
          WORKDIR /app
          COPY . .
          CMD ["echo", "Hello from multi-platform Python UV Docker!"]
          EOF
      
      - name: Test multi-platform build
        uses: ./
        with:
          image-name: test-python-uv-app-multiplatform
          image-tag: test-multiplatform
          platforms: linux/amd64,linux/arm64
          push: false